num_people = num_people
)
# Create the expanded dataset where each household ID is repeated based on the number of people
full_table <- household_data %>%
uncount(num_people) %>%
group_by(Household_ids) %>%
mutate(Person_id = row_number()) %>%
ungroup()
View(full_table)
# Getting the length of the observation in full_table
n_total <- nrow(full_table)
Household_Targeted <- sample(0:1,length(Household_ids),replace=T, prob=c(0.70,0.30))
targets <- data.frame(Household_ids,Household_Targeted)
full_table <- full_table %>% left_join(targets, by = "Household_ids")
full_table$Individual_targeted <- full_table$Household_Targeted * sample(0:1,nrow(full_table),replace = T)
#count of individual from each household that was targetted
prop_targeted_individuals <- full_table%>%
group_by(Household_ids)%>%
summarise(Prop = sum(Individual_targeted)/length(Individual_targeted))
View(prop_targeted_individuals)
full_table <- full_table %>% left_join(prop_targeted_individuals, by = "Household_ids")
full_table$Spending <- NA
rm(list=ls())
set.seed(2059)
# Generate household IDs from 1 to 250
Household_ids <- 1:250
# Generate a random number of people in each household (between 2 and 6)
num_people <- sample(2:6, 250, replace = TRUE)
# Create a data frame for household information
household_data <- data.frame(
Household_ids = Household_ids,
num_people = num_people
)
# Create the expanded dataset where each household ID is repeated based on the number of people
full_table <- household_data %>%
uncount(num_people) %>%
group_by(Household_ids) %>%
mutate(Person_id = row_number()) %>%
ungroup()
# Getting the length of the observation in full_table
n_total <- nrow(full_table)
Household_Targeted <- sample(0:1,length(Household_ids),replace=T, prob=c(0.70,0.30))
targets <- data.frame(Household_ids,Household_Targeted)
full_table <- full_table %>% left_join(targets, by = "Household_ids")
full_table$Individual_targeted <- full_table$Household_Targeted * sample(0:1,nrow(full_table),replace = T)
#count of individual from each household that was targetted
prop_targeted_individuals <- full_table%>%
group_by(Household_ids)%>%
summarise(Prop = sum(Individual_targeted)/length(Individual_targeted))
full_table <- full_table %>% left_join(prop_targeted_individuals, by = "Household_ids")
full_table$Spending <- NA
for (i in 1:nrow(full_table)){
full_table$Spending[i] <- rnorm(1,full_table$Prop[i]+5, 2) * 3 +rnorm(1,full_table$Household_Targeted[i]+5, 2)*2   + rnorm(1, full_table$Individual_targeted[i]+5,2)*5
}
#drop prop column in full_table
full_table <- full_table[,-5]
write.csv(full_table,"Customer Reaction.csv")
###############################################################################################
customer <- full_table
#delete everything except customer df
rm(list = setdiff(ls(), "customer"))
customer
#make histagram showing the customer spending for Household_Targetd ==1 and 0
hist(customer$Spending[customer$Household_Targeted==1],col="red",main="Customer Spending",xlab="Spending")
hist(customer$Spending[customer$Household_Targeted==0],col="red",main="Customer Spending",xlab="Spending")
#make histagram showing the customer spending for Household_Targetd ==1 and 0
data <- data.frame(
Spending = customer$Spending,
Household_Targeted = as.factor(customer$Household_Targeted)
)
View(data)
# Plot the histograms
ggplot(data, aes(x = Spending, fill = Household_Targeted)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Plot the histograms
ggplot(data, aes(x = Spending)) +
geom_histogram(binwidth = 10, fill = "red", color = "black", alpha = 0.7) +
facet_wrap(~ Household_Targeted, scales = "free_y") +
labs(title = "Customer Spending", x = "Spending", y = "Count", fill = "Household Targeted") +
theme_minimal()
#make histagram showing the customer spending for Household_Targetd ==1 and 0
# Create a data frame with the necessary data
data <- data.frame(
Spending = customer$Spending,
Household_Targeted = as.factor(customer$Household_Targeted),
Person = 1:length(customer$Spending)  # Assuming each spending entry corresponds to a unique person
)
# Plot the bar chart
ggplot(data, aes(x = Person, y = Spending, fill = Household_Targeted)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Person", y = "Spending", fill = "Household Targeted") +
theme_minimal()
#make histagram showing the customer spending for Household_Targetd ==1 and 0
data <- data.frame(
Spending = customer$Spending,
Household_Targeted = as.factor(customer$Household_Targeted)
)
# Plot the histograms
ggplot(data, aes(x = Spending, fill = Household_Targeted)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Plot the histograms
ggplot(customer, aes(x = Spending, fill = Household_Targeted)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Household Targeted") +
theme_minimal()
View(customer)
# Plot the histograms
ggplot(customer, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Plot the histograms
ggplot(customer, aes(x = Spending, fill = as.factor(Individual_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Plot the histograms
ggplot(customer, aes(x = Spending, fill = as.factor(Individual_targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Plot the histograms
ggplot(customer, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Household Targeted") +
theme_minimal()
library(gridExtra)
# Plot the histograms
p1 <- ggplot(customer, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Create the second histogram
p2 <- ggplot(customer, aes(x = Spending, fill = as.factor(Individual_targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending", x = "Spending", fill = "Individual Targeted") +
theme_minimal()
# Arrange the plots side by side
grid.arrange(p1, p2, ncol = 2)
# Calculate means
mean_household_targeted <- mean(customer$Spending[customer$Household_Targeted == 1], na.rm = TRUE)
mean_household_not_targeted <- mean(customer$Spending[customer$Household_Targeted == 0], na.rm = TRUE)
mean_individual_targeted <- mean(customer$Spending[customer$Individual_targeted == 1], na.rm = TRUE)
mean_individual_not_targeted <- mean(customer$Spending[customer$Individual_targeted == 0], na.rm = TRUE)
# Create the first histogram
p1 <- ggplot(customer, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_household_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_household_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Create the second histogram
p2 <- ggplot(customer, aes(x = Spending, fill = as.factor(Individual_targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_individual_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_individual_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Individual Targeting", x = "Spending", fill = "Individual Targeted") +
theme_minimal()
# Arrange the plots side by side
grid.arrange(p1, p2, ncol = 2)
#filter individual targeted
customer_spillover <- customer[customer$Individual_targeted==1,]
View(customer_spillover)
#filter individual targeted
customer_spillover <- customer[customer$Individual_targeted==0,]
p3 <- ggplot(customer_spillover, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_household_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_household_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Spending", fill = "Household Targeted") +
theme_minimal()
p3
mean_individual_from_household_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 1], na.rm = TRUE)
mean_individual_from_household_not_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 0], na.rm = TRUE)
p3 <- ggplot(customer_spillover, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_individual_from_household_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_individual_from_household_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Spending", fill = "Household Targeted") +
theme_minimal()
p3
mean(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
mean(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==1])
mean(customer$Spending[customer$Household_Targeted==0 & customer$Individual_targeted==0])
mean(customer$Spending[customer$Household_Targeted==0 & customer$Individual_targeted==1])
summary(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0]
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
details <- function(x){
avg <- mean(x)
std <- sd(x)
n <- length(x)
}
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
details <- function(x){
avg <- mean(x)
std <- sd(x)
n <- length(x)
return(avg,std,n)
}
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
return(c(avg,std,n))
details <- function(x){
avg <- mean(x)
std <- sd(x)
n <- length(x)
return(c(avg,std,n))
}
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==1])
details(customer$Spending[customer$Household_Targeted==0 & customer$Individual_targeted==0])
details(customer$Spending[customer$Household_Targeted==0 & customer$Individual_targeted==1])
t.test(data=customer_spillover,Spending~Household_Targeted)
summary(t.test(data=customer_spillover,Spending~Household_Targeted))
t.test(data=customer_spillover,Spending~Household_Targeted)
library(readr)
library(tidyverse)
library(gridExtra)
customer <- read_csv("Customer Reaction.csv")
# Calculate means
mean_household_targeted <- mean(customer$Spending[customer$Household_Targeted == 1], na.rm = TRUE)
mean_household_not_targeted <- mean(customer$Spending[customer$Household_Targeted == 0], na.rm = TRUE)
mean_individual_targeted <- mean(customer$Spending[customer$Individual_targeted == 1], na.rm = TRUE)
mean_individual_not_targeted <- mean(customer$Spending[customer$Individual_targeted == 0], na.rm = TRUE)
# Create the first histogram
p1 <- ggplot(customer, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_household_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_household_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Create the second histogram
p2 <- ggplot(customer, aes(x = Spending, fill = as.factor(Individual_targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_individual_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_individual_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Individual Targeting", x = "Spending", fill = "Individual Targeted") +
theme_minimal()
# Arrange the plots side by side
grid.arrange(p1, p2, ncol = 2)
#filter individual targeted
customer_spillover <- customer[customer$Individual_targeted==0,]
mean_individual_from_household_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 1], na.rm = TRUE)
mean_individual_from_household_not_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 0], na.rm = TRUE)
p3 <- ggplot(customer_spillover, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_individual_from_household_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_individual_from_household_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Spending", fill = "Household Targeted") +
theme_minimal()
p3
HH_diff<-tapply(customer$Spending,customer$Household_Targeted,mean)
II_diff<- tapply(customer$Spending,customer$Individual_targeted,mean)
details <- function(x){
avg <- mean(x)
std <- sd(x)
n <- length(x)
return(c(avg,std,n))
}
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==1])
details(customer$Spending[customer$Household_Targeted==0 & customer$Individual_targeted==0])
details(customer$Spending[customer$Household_Targeted==0 & customer$Individual_targeted==1])
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "greater")
rm(list=ls())
customer <- read_csv("Customer Reaction.csv")
# Calculate means
mean_household_targeted <- mean(customer$Spending[customer$Household_Targeted == 1], na.rm = TRUE)
mean_household_not_targeted <- mean(customer$Spending[customer$Household_Targeted == 0], na.rm = TRUE)
mean_individual_targeted <- mean(customer$Spending[customer$Individual_targeted == 1], na.rm = TRUE)
mean_individual_not_targeted <- mean(customer$Spending[customer$Individual_targeted == 0], na.rm = TRUE)
# Create the first histogram
p1 <- ggplot(customer, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_household_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_household_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Spending", fill = "Household Targeted") +
theme_minimal()
# Create the second histogram
p2 <- ggplot(customer, aes(x = Spending, fill = as.factor(Individual_targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_individual_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_individual_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Individual Targeting", x = "Spending", fill = "Individual Targeted") +
theme_minimal()
# Arrange the plots side by side
grid.arrange(p1, p2, ncol = 2)
#filter individual targeted
customer_spillover <- customer[customer$Individual_targeted==0,]
mean_individual_from_household_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 1], na.rm = TRUE)
mean_individual_from_household_not_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 0], na.rm = TRUE)
p3 <- ggplot(customer_spillover, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_individual_from_household_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_individual_from_household_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Spending", fill = "Household Targeted") +
theme_minimal()
p3
HH_diff<-tapply(customer$Spending,customer$Household_Targeted,mean)
II_diff<- tapply(customer$Spending,customer$Individual_targeted,mean)
details <- function(x){
avg <- mean(x)
std <- sd(x)
n <- length(x)
return(c(avg,std,n))
}
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==0])
details(customer$Spending[customer$Household_Targeted==1 & customer$Individual_targeted==1])
details(customer$Spending[customer$Household_Targeted==0 & customer$Individual_targeted==0])
details(customer$Spending[customer$Household_Targeted==0 & customer$Individual_targeted==1])
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "greater")
# Calculate means
mean_household_targeted <- mean(customer$Spending[customer$Household_Targeted == 1], na.rm = TRUE)
mean_household_targeted
# Calculate means
mean_household_targeted <- mean(customer$Spending[customer$Household_Targeted == 1], na.rm = TRUE)
mean_household_not_targeted <- mean(customer$Spending[customer$Household_Targeted == 0], na.rm = TRUE)
mean_individual_targeted <- mean(customer$Spending[customer$Individual_targeted == 1], na.rm = TRUE)
mean_individual_not_targeted <- mean(customer$Spending[customer$Individual_targeted == 0], na.rm = TRUE)
p1
p3 <- ggplot(customer_spillover, aes(x = Spending, fill = as.factor(Household_Targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_individual_from_household_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_individual_from_household_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting but Controlled Individual", x = "Spending", fill = "Household Targeted") +
theme_minimal()
p3
# Create the second histogram
p2 <- ggplot(customer, aes(x = Spending, fill = as.factor(Individual_targeted))) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
geom_vline(aes(xintercept = mean_individual_targeted), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean_individual_not_targeted), color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Individual Targeting", x = "Spending", fill = "Individual Targeted") +
theme_minimal()
p2
p3
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "greater")
HH_diff<-tapply(customer$Spending,customer$Household_Targeted,mean)
II_diff<- tapply(customer$Spending,customer$Individual_targeted,mean)
View(customer_spillover)
View(customer)
t.test(data=customer,Spending~Household_Targeted, alternative = "greater")
t.test(data=customer,Spending~Individual_targeted, alternative = "greater")
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "greater", paired=F, var.equal=F, conf.level=0.95,mu=0)
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "greater", paired=F, var.equal=F, conf.level=0.95,mu=0)
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "greater", paired=F, var.equal=F, conf.level=0.95,mu=0)
t.test(data=customer_spillover,Spending~Household_Targeted, paired=F, var.equal=F, conf.level=0.95,mu=0)
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "greater")
1-0.905
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "less")
help(t.test)
t.test(customer_spillover$Household_Targeted==1,customer_spillover$Household_Targeted==0)
t.test(customer_spillover$Household_Targeted==1,customer_spillover$Household_Targeted==0,alternative = "greater")
t.test(data=customer_spillover,Spending~Household_Targeted, alternative = "greater")
View(customer_spillover)
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "greater")
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "greater", mu=2)
ggplot(customer, aes(x = as.factor(Household_Targeted), y = Spending, fill = as.factor(Household_Targeted))) +
geom_bar(stat = "summary", fun = "mean", alpha = 0.5) +
geom_hline(aes(yintercept = means$mean_spending[1]), color = "blue", linetype = "dashed", size = 1) +
geom_hline(aes(yintercept = means$mean_spending[2]), color = "red", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Household Targeted", y = "Mean Spending", fill = "Household Targeted") +
theme_minimal()
ggplot(customer, aes(x = as.factor(Household_Targeted), y = Spending, fill = as.factor(Household_Targeted))) +
geom_bar(stat = "summary", fun = "mean", alpha = 0.5) +
geom_hline(aes(yintercept = means$mean_spending[1]), color = "blue", linetype = "dashed", size = 1) +
geom_hline(aes(yintercept = means$mean_spending[2]), color = "red", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Household Targeted", y = "Mean Spending", fill = "Household Targeted") +
theme_minimal()
ggplot(customer_spillover, aes(x = as.factor(Household_Targeted), y = Spending, fill = as.factor(Household_Targeted))) +
geom_bar(stat = "summary", fun = "mean", alpha = 0.5) +
geom_hline(aes(yintercept = means$mean_spending[1]), color = "blue", linetype = "dashed", size = 1) +
geom_hline(aes(yintercept = means$mean_spending[2]), color = "red", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting", x = "Household Targeted", y = "Mean Spending", fill = "Household Targeted") +
theme_minimal()
# Create the bar plot
ggplot(customer_spillover, aes(x = as.factor(Household_Targeted), y = Spending, fill = as.factor(Household_Targeted))) +
geom_bar(stat = "summary", fun = "mean", alpha = 0.5) +
geom_hline(yintercept = mean_individual_from_household_targeted, color = "red", linetype = "dashed", size = 1) +
geom_hline(yintercept = mean_individual_from_household_not_targeted, color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting but Controlled Individual", x = "Household Targeted", y = "Mean Spending", fill = "Household Targeted") +
theme_minimal()
# Create the bar plot
ggplot(customer_spillover, aes(x = as.factor(Household_Targeted), y = Spending, fill = as.factor(Household_Targeted))) +
geom_barplot(stat = "summary", fun = "mean", alpha = 0.5) +
geom_hline(yintercept = mean_individual_from_household_targeted, color = "red", linetype = "dashed", size = 1) +
geom_hline(yintercept = mean_individual_from_household_not_targeted, color = "blue", linetype = "dashed", size = 1) +
scale_fill_manual(values = c("0" = "blue", "1" = "red")) +
labs(title = "Customer Spending by Household Targeting but Controlled Individual", x = "Household Targeted", y = "Mean Spending", fill = "Household Targeted") +
theme_minimal()
a <- (5,6,7,8)
a <- c(5,6,7,8)
b <- (20,21,20,19)
b <- c(20,21,20,19)
t.test(a,b)
t.test(a,b,alternative ="greater")
a<- c(5,6,7,8)
b<-c(20,21,19,20)
t.test(a,b,alternative = "greater")
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less", mu=2)
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less", mu=2)
t.test(data=customer,Spending~Household_Targeted, alternative = "less")
t.test(data=customer,Spending~Individual_targeted, alternative = "less")
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less", mu=2)
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less", mu=2)
#main test
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
(mean(customer_spillover$Spending[customer_spillover$Household_Targeted==1])-mean(customer_spillover$Spending[customer_spillover$Household_Targeted==0]))
d=(mean(customer_spillover$Spending[customer_spillover$Household_Targeted==1])-mean(customer_spillover$Spending[customer_spillover$Household_Targeted==0]))
m1 = (mean(customer_spillover$Spending[customer_spillover$Household_Targeted==1])
)
m2 = mean(customer_spillover$Spending[customer_spillover$Household_Targeted==0])
s1 = sd(customer_spillover$Spending[customer_spillover$Household_Targeted==1])
s2 = sd(customer_spillover$Spending[customer_spillover$Household_Targeted==0])
n1 = length(customer_spillover$Household_Targeted==1)
n1 = length(customer_spillover$Household_Targeted==0)
n2 = length(customer_spillover$Household_Targeted==0)
n2 = count(customer_spillover$Household_Targeted==0)
n2 = length(customer_spillover[customer_spillover$Household_Targeted==0])
nrow(customer_spillover$Household_Targeted==1)
table(customer_spillover$Household_Targeted)
n1=732
n2=145
(m1-m2)/sqrt((s1^2/n1)+(s2^2/n1))
#main test
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
#main test
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "greater")
#main test
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
(m1-m2)/sqrt((s1^2/n1)+(s2^2/n2))
s1 <- s1^2
s2<-s2^2
(m1-m2)/sqrt(s1/n1+s2/n2)
#main test
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
m2 <- mean(customer_spillover$Household_Targeted==1)
m2 <- mean(customer_spillover[customer_spillover$Household_Targeted==0])
m2 <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted==0])
# Calculate means
mean_household_targeted <- mean(customer$Spending[customer$Household_Targeted == 1], na.rm = TRUE)
mean_household_not_targeted <- mean(customer$Spending[customer$Household_Targeted == 0], na.rm = TRUE)
mean_individual_targeted <- mean(customer$Spending[customer$Individual_targeted == 1], na.rm = TRUE)
mean_individual_not_targeted <- mean(customer$Spending[customer$Individual_targeted == 0], na.rm = TRUE)
#filter individual targeted
customer_spillover <- customer[customer$Individual_targeted==0,]
mean_individual_from_household_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 1], na.rm = TRUE)
mean_individual_from_household_not_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 0], na.rm = TRUE)
m2 <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted==0], na.rm=T)
mean_individual_from_household_not_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 0])
m2 <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted==0], na.rm=T)
mean_individual_from_household_not_targeted-ma
mean_individual_from_household_not_targeted-m2
mean_individual_from_household_not_targeted <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted == 0])
m2 <- mean(customer_spillover$Spending[customer_spillover$Household_Targeted==0], na.rm=T)
mean_individual_from_household_not_targeted-m2
(m1-m2)/sqrt((s1^2/n1)+(s2^2/n2))
#main test
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
(m1-m2)/sqrt((s1^2/n1)+(s2^2/n2))
x <- customer_spillover$Spending[customer_spillover$Household_Targeted==1]
y <- customer_spillover$Spending[customer_spillover$Household_Targeted==0]
t.test(x,y,alternative = "greater")
x <- customer_spillover$Spending[customer_spillover$Household_Targeted==1]
y <- customer_spillover$Spending[customer_spillover$Household_Targeted==0]
t.test(x,y,alternative = "greater")
#main test
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
(m1-m2)/sqrt((s1^2/n1)+(s2^2/n2))
#main test
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
t.test(x,y,alternative = "greater")
t.test(x,y,alternative = "greater")
(m1-m2)/sqrt((s1^2/n1)+(s2^2/n2))
(m2-m1)/sqrt((s1^2/n1)+(s2^2/n2))
#main test
x <- customer_spillover$Spending[customer_spillover$Household_Targeted==1]
y <- customer_spillover$Spending[customer_spillover$Household_Targeted==0]
t.test(x,y,alternative = "greater")
t.test(data=customer_spillover,Spending~as.factor(Household_Targeted), alternative = "less")
